* Spacemacs Rocks Season 2(Day 07)

** Tweak C-w to delete backward

#+BEGIN_SRC emacs-lisp
  ;; Use C-w to backward deleti a word
  (global-set-key (kbd "C-w") 'backward-kill-word)

#+END_SRC

** Evil: Turn Emacs into Vim in one second
*** colemak-evil 
- references: 
  * https://github.com/patbl/colemak-evil/tree/192c779281ae1fbf2405dcdb55b3c5b2a1d0b3d1
  * https://melpa.org/#/?q=colemak
  * add `(require 'colemak-evil)` to init.el

*** evil-colemak-basics
- references
  * https://github.com/wbolster/evil-colemak-basics
  * add bellow settings to init.el

#+BEGIN_SRC emacs-lisp
  (require 'evil-colemak-basics)
  (global-evil-colemak-basics-mode)
#+END_SRC
  * put above configure after other `evil`, bacausu that can Confusion colemak vim keymap

*** qwerty/normal evil plugin
- 1. install Evil plugin
  + M-x 'Package-list-packages' C-s evil i x
  + add `(evil-mode t)` to your init.el
  + references:
    - https://readthedocs.org/projects/evil/downloads/pdf/latest/
    - https://github.com/emacs-evil/evil
- 2. tell the different between Evil and Vim
  + Universal args
- 3. Evil state = Vim mode
  + evil normal state
  + evil insert state
  + evil visual state
  + evil motion state
  + evil emacs state
  + evil operator state (diw ct9 etc)
- 4. Configure Evil leader key
#+BEGIN_SRC emacs-lisp
  ;; init-packages'.el
  (global-evil-leader-mode)

  ;; Needs to `M-x customize-group RET evil-leader RET  Evil Leader/Leade: SPC`, change '\' to 'SPC(Space)'
  (evil-leader/set-key
    "ff" 'find-file
    "fr" 'recentf-open-files
    "bb" 'switch-to-buffer
    "kb" 'kill-buffer-and-window
    "pf" 'counsel-git
    "ps" 'helm-do-ag-project-root
    "o" 'other-window
    ;; window-numbering configuration
    "0" 'select-window-0
    "1" 'select-window-1
    "2" 'select-window-2
    "3" 'select-window-3
    "4" 'select-window-4
    "sr" 'split-window-right
    "sb" 'split-window-below
    ";" 'counsel-M-x)
    
#+END_SRC

- 5. Press `C-z` to toggle between Normal and Emacs states
  + M-x `evil-leader-mode'
  + before press C-z, press Esc or C-[
  + C-z bund to `evil-emacs-state`
- 6. Made some modes to use emacs-state
  + In vim: switch window used for C-w-(hjkl)
  + window-numbering: switch window
  + powerline
- 7. binding h/n/k/l key for `qwerty' layout keyboard

#+BEGIN_SRC emacs-lisp

#+END_SRC

*** evil-surround
- install
  + M-x package-refresh-contents RET M-x package-install RET evil-surround RET
  + M-x package-install RET use-package
  + referinces: https://github.com/emacs-evil/evil-surround/tree/9b0b17f06cef9bac81ee4800d121265e54718a17
- configure
    #+BEGIN_SRC emacs-lisp
      (use-package evil-surround
	:ensure t
	:config
	(global-evil-surround-mode 1))
    #+END_SRC
- usage example
  + a string "hello wowld" when execute "cs")" changed to (hello world)

*** evil-nerd-commenter
- references: https://github.com/redguardtoo/evil-nerd-commenter/tree/4387407615258d5e95f71bfb425cbe92dd813290
- install
  + M-x package-install RET evil-nerd-commenter
- configure
  + Insert (evilnc-default-hotkeys) into ~/.emacs, for example
#+BEGIN_SRC emacs-lisp
  ;; evilnc-default-hotkeys
  (evilnc-default-hotkeys)

  ;; Emacs key bindings
  (global-set-key (kbd "M-;") 'evilnc-comment-or-uncomment-lines)
  (global-set-key (kbd "C-c l") 'evilnc-quick-comment-or-uncomment-to-the-line)
  (global-set-key (kbd "C-c c") 'evilnc-copy-and-comment-lines)
  (global-set-key (kbd "C-c p") 'evilnc-comment-or-uncomment-paragraphs)

  ;; Vim key bindings
  (require 'evil-leader)
  (global-evil-leader-mode)
  (evil-leader/set-key
    ";" 'evilnc-comment-or-uncomment-lines
    "cl" 'evilnc-quick-comment-or-uncomment-to-the-line
    "ll" 'evilnc-quick-comment-or-uncomment-to-the-line
    "cc" 'evilnc-copy-and-comment-lines
    "cp" 'evilnc-comment-or-uncomment-paragraphs
    "cr" 'comment-or-uncomment-region
    "cv" 'evilnc-toggle-invert-comment-line-by-line
    "."  'evilnc-copy-and-comment-operator
    "\\" 'evilnc-comment-operator ; if you prefer backslash key
  )
#+END_SRC
- usage
  + SPC-; comment or uncomment current line
  + SPC-cp comment or uncomment paragraphs

*** Made some modes to use emacs-state
- new version need'nt to do this
#+BEGIN_SRC emacs-lisp
  (dolist (mode '(ag-mode
		  flycheck-error-list-mode
		  git-rebase-mode))
    (add-to-list 'evil-emacs-state-modes mode))
#+END_SRC

*** binding h/j/k/l keys
#+BEGIN_SRC emacs-lisp
  (add-hook 'occur-mode-hook
	    (lambda ()
	      (evil-add-hjkl-bindings occur-mode-map 'emacs
		(kbd "/")          'evil-search-forward
		(kbd "n")          'evil-search-next
		(kbd "N")          'evil-search-previous
		(kbd "C-d")        'evil-scroll-down
		(kbd "C-U")        'evil-scroll-up)))
#+END_SRC

** Which key
- install: M-x package-install which-key
- configure: Popup side window on bottom. This is the current default. To restore this setup use `(which-key-setup-side-window-bottom)`

** Design your key bindings

** Bonus Time: Search Org notes

** References

** Exercises

   
